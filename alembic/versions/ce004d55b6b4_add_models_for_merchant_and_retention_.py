"""Add models for Merchant and Retention roles

Revision ID: ce004d55b6b4
Revises: dff95821a444
Create Date: 2025-09-04 18:44:53.211341

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ce004d55b6b4'
down_revision: Union[str, None] = 'dff95821a444'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('status', sa.String(length=20), nullable=True),
                    sa.Column('assigned_to', sa.String(
                        length=100), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_activities_id'),
                    'activities', ['id'], unique=False)
    op.create_table('assigned_merchants',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('merchant_id', sa.Integer(), nullable=False),
                    sa.Column('date', sa.Date(), nullable=False),
                    sa.Column('status', sa.String(length=20), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_assigned_merchants_id'),
                    'assigned_merchants', ['id'], unique=False)
    op.add_column('sales_records', sa.Column('date', sa.Date(), nullable=True))
    op.execute("UPDATE sales_records SET date = '2025-01-01' WHERE date IS NULL")
    op.alter_column('sales_records', 'date', nullable=False)
    op.add_column('sales_records', sa.Column(
        'amount', sa.Integer(), nullable=True))
    op.execute("UPDATE sales_records SET amount = 0 WHERE amount IS NULL")
    op.alter_column('sales_records', 'amount', nullable=False)

    # Fix merchant_id conversion
    op.execute("""
        UPDATE sales_records
        SET merchant_id = regexp_replace(merchant_id, '[^0-9]', '', 'g')::integer
        WHERE merchant_id ~ '^[A-Za-z]+[0-9]+$';
    """)
    op.execute(
        "ALTER TABLE sales_records ALTER COLUMN merchant_id TYPE INTEGER USING merchant_id::integer")

    op.drop_column('sales_records', 'sale_date')
    op.drop_column('sales_records', 'product_name')
    op.drop_column('sales_records', 'revenue')
    op.drop_column('sales_records', 'quantity')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sales_records', sa.Column(
        'quantity', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('sales_records', sa.Column('revenue', sa.VARCHAR(
        length=20), autoincrement=False, nullable=False))
    op.add_column('sales_records', sa.Column('product_name', sa.VARCHAR(
        length=100), autoincrement=False, nullable=False))
    op.add_column('sales_records', sa.Column(
        'sale_date', sa.DATE(), autoincrement=False, nullable=False))
    op.alter_column('sales_records', 'merchant_id',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(length=50),
                    existing_nullable=False)
    op.drop_column('sales_records', 'amount')
    op.drop_column('sales_records', 'date')
    op.drop_index(op.f('ix_assigned_merchants_id'),
                  table_name='assigned_merchants')
    op.drop_table('assigned_merchants')
    op.drop_index(op.f('ix_activities_id'), table_name='activities')
    op.drop_table('activities')
    # ### end Alembic commands ###
