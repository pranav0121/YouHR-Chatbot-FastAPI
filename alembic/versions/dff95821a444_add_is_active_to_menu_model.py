"""Add is_active to Menu model

Revision ID: dff95821a444
Revises: 0c970d99f6b2
Create Date: 2025-09-04 18:39:14.996049

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dff95821a444'
down_revision: Union[str, None] = '0c970d99f6b2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('merchant_profiles')
    op.drop_table('assigned_merchants')
    op.add_column('menus', sa.Column('is_active', sa.Boolean(), nullable=True))
    # Set default value for existing rows in `payslips` table
    op.add_column('payslips', sa.Column(
        'month', sa.String(length=20), nullable=True))
    op.execute("UPDATE payslips SET month = 'January 2025' WHERE month IS NULL")
    op.alter_column('payslips', 'month', nullable=False)
    op.add_column('payslips', sa.Column('amount', sa.Integer(), nullable=True))
    op.execute("UPDATE payslips SET amount = 0 WHERE amount IS NULL")
    op.alter_column('payslips', 'amount', nullable=False)
    op.alter_column('payslips', 'status',
                    existing_type=sa.VARCHAR(length=20),
                    nullable=False)
    op.drop_column('payslips', 'deductions')
    op.drop_column('payslips', 'gross_salary')
    op.drop_column('payslips', 'basic_salary')
    op.drop_column('payslips', 'pay_period_start')
    op.drop_column('payslips', 'download_url')
    op.drop_column('payslips', 'pay_period')
    op.drop_column('payslips', 'generated_date')
    op.drop_column('payslips', 'allowances')
    op.drop_column('payslips', 'pay_period_end')
    op.drop_column('payslips', 'net_salary')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('payslips', sa.Column('net_salary', sa.VARCHAR(
        length=20), autoincrement=False, nullable=False))
    op.add_column('payslips', sa.Column('pay_period_end',
                  sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('payslips', sa.Column('allowances', sa.VARCHAR(
        length=20), autoincrement=False, nullable=False))
    op.add_column('payslips', sa.Column('generated_date',
                  sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('payslips', sa.Column('pay_period', sa.VARCHAR(
        length=20), autoincrement=False, nullable=False))
    op.add_column('payslips', sa.Column('download_url', sa.VARCHAR(
        length=500), autoincrement=False, nullable=True))
    op.add_column('payslips', sa.Column('pay_period_start',
                  sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('payslips', sa.Column('basic_salary', sa.VARCHAR(
        length=20), autoincrement=False, nullable=False))
    op.add_column('payslips', sa.Column('gross_salary', sa.VARCHAR(
        length=20), autoincrement=False, nullable=False))
    op.add_column('payslips', sa.Column('deductions', sa.VARCHAR(
        length=20), autoincrement=False, nullable=False))
    op.alter_column('payslips', 'status',
                    existing_type=sa.VARCHAR(length=20),
                    nullable=True)
    op.drop_column('payslips', 'amount')
    op.drop_column('payslips', 'month')
    op.drop_column('menus', 'is_active')
    op.create_table('assigned_merchants',
                    sa.Column('merchant_id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('merchant_name', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('location', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=True),
                    sa.Column('health_status', sa.VARCHAR(length=50),
                              autoincrement=False, nullable=True),
                    sa.Column('last_contact', sa.DATE(),
                              autoincrement=False, nullable=True),
                    sa.Column('priority', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('assigned_activity', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.Column('assigned_date', sa.DATE(), server_default=sa.text(
                        'CURRENT_DATE'), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint(
                        'merchant_id', name=op.f('assigned_merchants_pkey'))
                    )
    op.create_table('merchant_profiles',
                    sa.Column('merchant_id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('merchant_name', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('business_type', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.Column('location', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=True),
                    sa.Column('contact_person', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=True),
                    sa.Column('phone', sa.VARCHAR(length=15),
                              autoincrement=False, nullable=True),
                    sa.Column('health_status', sa.VARCHAR(length=50),
                              autoincrement=False, nullable=True),
                    sa.Column('last_sales', sa.DATE(),
                              autoincrement=False, nullable=True),
                    sa.Column('monthly_target', sa.NUMERIC(precision=10, scale=2),
                              autoincrement=False, nullable=True),
                    sa.Column('onboarding_date', sa.DATE(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint(
                        'merchant_id', name=op.f('merchant_profiles_pkey'))
                    )
    # ### end Alembic commands ###
